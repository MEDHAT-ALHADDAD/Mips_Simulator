package mipsproject10;

import Units.ADDER;
import Units.ALU;
import Units.AluControl;
import Units.Contoller;
import Units.DataMemory;
import Units.DataPath;
import Units.InstructionMemory;
import Units.MUX;
import Units.PC;
import Units.Parse;
import static Units.Parse.*;
//import static Units.Parse.parseDtoB;
import Units.RegisterFile;
import Units.SL2;
import Units.SignExtend;
import Units.labels;
import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;

/**
 *
 * @author Medha
 */
public class APP extends javax.swing.JFrame {

    private int[] parseInt(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
    }
    
    class mem{
        JLabel j;
        int address;

        public mem(JLabel j, int address) {
            this.j = j;
            this.address = address;
        }

        public int getAddress() {
            return address;
        }

        public JLabel getJ() {
            return j;
        }

        public void setAddress(int address) {
            this.address = address;
        }

        public void setJ(JLabel j) {
            this.j = j;
        }
        
    }
    private  ArrayList <mem> Labels=new ArrayList<>();
    private  int k;
    private int n;
    private  int nomono;
    private  PC pc;
    private  ADDER adder1;
    private  ADDER adder2;
    private  ALU alu;
    private  SL2 sl1;
    private  SL2 sl2;
    private  SL2 sl3;
    private  SignExtend se;
    private  Contoller control;
    private  AluControl aluControl;
    private  MUX mux1;
    private  MUX mux2;
    private  MUX mux3;
    private  MUX mux4;
    private  MUX mux5;
    private  MUX mux6;
    private  MUX mux7;
    private  MUX mux8;
    private  MUX mux9;
    private  AluControl alucont;
    private  InstructionMemory im;
    private  DataMemory dm=new DataMemory();//////////////////////////
    private  RegisterFile rf;
    private int counter;
    
     private DataPath d2;
     private DataPath d;
    
    public APP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        south = new javax.swing.JPanel();
        datapath = new javax.swing.JPanel();
        datapath_scrl = new javax.swing.JScrollPane();
        datapath_values = new javax.swing.JPanel();
        rf_rf = new javax.swing.JLabel();
        op_code_l = new javax.swing.JLabel();
        rs = new javax.swing.JLabel();
        rs_l = new javax.swing.JLabel();
        bit16 = new javax.swing.JLabel();
        rt_l = new javax.swing.JLabel();
        func = new javax.swing.JLabel();
        rd_l = new javax.swing.JLabel();
        read_data1 = new javax.swing.JLabel();
        shamt_l = new javax.swing.JLabel();
        shamt = new javax.swing.JLabel();
        funct_l = new javax.swing.JLabel();
        bit32_rd2shamt_mux = new javax.swing.JLabel();
        pc_output_l = new javax.swing.JLabel();
        zerofalg = new javax.swing.JLabel();
        pc_adder_output_l = new javax.swing.JLabel();
        alu_mem_mux = new javax.swing.JLabel();
        write_data_rf_l = new javax.swing.JLabel();
        jr_mux = new javax.swing.JLabel();
        read_data1_l = new javax.swing.JLabel();
        bit32_sl2 = new javax.swing.JLabel();
        read_data2_l = new javax.swing.JLabel();
        branch_mux = new javax.swing.JLabel();
        alu_input1_l = new javax.swing.JLabel();
        pcoutput = new javax.swing.JLabel();
        alu_input2_l = new javax.swing.JLabel();
        jumb_add = new javax.swing.JLabel();
        alu_output_l = new javax.swing.JLabel();
        ctr_jump = new javax.swing.JLabel();
        mem_address_l = new javax.swing.JLabel();
        ctr_memread = new javax.swing.JLabel();
        mem_write_data_l = new javax.swing.JLabel();
        ctr_aluop = new javax.swing.JLabel();
        zero_flag_l = new javax.swing.JLabel();
        ctr_alusrc = new javax.swing.JLabel();
        and_gate_l = new javax.swing.JLabel();
        ctr_pcsrc = new javax.swing.JLabel();
        branch_adder_input1_l = new javax.swing.JLabel();
        ctr_jreg = new javax.swing.JLabel();
        branch_adder_input2_l = new javax.swing.JLabel();
        opcode1 = new javax.swing.JLabel();
        branch_adder_output_l = new javax.swing.JLabel();
        rt1 = new javax.swing.JLabel();
        signextend_input_l = new javax.swing.JLabel();
        regdstmux1 = new javax.swing.JLabel();
        signextend_output_l = new javax.swing.JLabel();
        bit33 = new javax.swing.JLabel();
        alu_control_l = new javax.swing.JLabel();
        read_data4 = new javax.swing.JLabel();
        jr_mux_l = new javax.swing.JLabel();
        rd2_shamt_mux1 = new javax.swing.JLabel();
        rd_mux_l = new javax.swing.JLabel();
        aluout1 = new javax.swing.JLabel();
        shamt_mux_l = new javax.swing.JLabel();
        memoutput1 = new javax.swing.JLabel();
        alu_src_mux_l = new javax.swing.JLabel();
        jal_mux1 = new javax.swing.JLabel();
        alu_mem_mux_l = new javax.swing.JLabel();
        andgate1 = new javax.swing.JLabel();
        jal_mux_l = new javax.swing.JLabel();
        branch_adder1 = new javax.swing.JLabel();
        branch_mux_l = new javax.swing.JLabel();
        jumb_mux1 = new javax.swing.JLabel();
        ctr_regDest_l = new javax.swing.JLabel();
        pcp5 = new javax.swing.JLabel();
        ctr_regWrite_l = new javax.swing.JLabel();
        ctr_regdst1 = new javax.swing.JLabel();
        ctr_aluSrc_l = new javax.swing.JLabel();
        ctr_branch1 = new javax.swing.JLabel();
        ctr_aluOp_l = new javax.swing.JLabel();
        ctr_memreg1 = new javax.swing.JLabel();
        ctr_branch_l = new javax.swing.JLabel();
        ctr_memwrite1 = new javax.swing.JLabel();
        ctr_memRead_l = new javax.swing.JLabel();
        ctr_regwrite1 = new javax.swing.JLabel();
        ctr_memWrite_l = new javax.swing.JLabel();
        ctr_shiftlogic1 = new javax.swing.JLabel();
        ctr_memToReg_l = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ctr_jump_l = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ctr_jal_l = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ctr_jr_l = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ctr_shiftLogic_l = new javax.swing.JLabel();
        counter_l = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        address_lbl = new javax.swing.JTextField();
        data_lbl = new javax.swing.JTextField();
        ADD_btn = new javax.swing.JButton();
        memory = new javax.swing.JPanel();
        memoryscrl = new javax.swing.JScrollPane();
        mempanal = new javax.swing.JPanel();
        registers = new javax.swing.JPanel();
        $0 = new javax.swing.JLabel();
        $0s = new javax.swing.JLabel();
        $at = new javax.swing.JLabel();
        $ats = new javax.swing.JLabel();
        $v0 = new javax.swing.JLabel();
        $v0s = new javax.swing.JLabel();
        $v1 = new javax.swing.JLabel();
        $v1s = new javax.swing.JLabel();
        $a0 = new javax.swing.JLabel();
        $a0s = new javax.swing.JLabel();
        $a1 = new javax.swing.JLabel();
        $a1s = new javax.swing.JLabel();
        $a2 = new javax.swing.JLabel();
        $a2s = new javax.swing.JLabel();
        $a3 = new javax.swing.JLabel();
        $a3s = new javax.swing.JLabel();
        $t0 = new javax.swing.JLabel();
        $t0s = new javax.swing.JLabel();
        $t1 = new javax.swing.JLabel();
        $t1s = new javax.swing.JLabel();
        $t2 = new javax.swing.JLabel();
        $t2s = new javax.swing.JLabel();
        $t3 = new javax.swing.JLabel();
        $t3s = new javax.swing.JLabel();
        $t4 = new javax.swing.JLabel();
        $t4s = new javax.swing.JLabel();
        $t5 = new javax.swing.JLabel();
        $t5s = new javax.swing.JLabel();
        $t6 = new javax.swing.JLabel();
        $t6s = new javax.swing.JLabel();
        $t7 = new javax.swing.JLabel();
        $t7s = new javax.swing.JLabel();
        $s0 = new javax.swing.JLabel();
        $s0s = new javax.swing.JLabel();
        $s1 = new javax.swing.JLabel();
        $s1s = new javax.swing.JLabel();
        $s2 = new javax.swing.JLabel();
        $s2s = new javax.swing.JLabel();
        $s3 = new javax.swing.JLabel();
        $s3s = new javax.swing.JLabel();
        $s4 = new javax.swing.JLabel();
        $s4s = new javax.swing.JLabel();
        $s5 = new javax.swing.JLabel();
        $s5s = new javax.swing.JLabel();
        $s6 = new javax.swing.JLabel();
        $s6s = new javax.swing.JLabel();
        $s7 = new javax.swing.JLabel();
        $s7s = new javax.swing.JLabel();
        $t8 = new javax.swing.JLabel();
        $t8s = new javax.swing.JLabel();
        $t9 = new javax.swing.JLabel();
        $t9s = new javax.swing.JLabel();
        $k0 = new javax.swing.JLabel();
        $k0s = new javax.swing.JLabel();
        $k1 = new javax.swing.JLabel();
        $k1s = new javax.swing.JLabel();
        $gp = new javax.swing.JLabel();
        $gps = new javax.swing.JLabel();
        $sp = new javax.swing.JLabel();
        $sps = new javax.swing.JLabel();
        $fp = new javax.swing.JLabel();
        $fps = new javax.swing.JLabel();
        $ra = new javax.swing.JLabel();
        $ras = new javax.swing.JLabel();
        text_area = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        compiler = new javax.swing.JMenuItem();
        nextr = new javax.swing.JMenuItem();
        runr = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MIPS_SIM");
        setMaximumSize(new java.awt.Dimension(1270, 820));
        setMinimumSize(new java.awt.Dimension(1270, 720));
        setName("application"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1270, 740));
        setResizable(false);

        south.setPreferredSize(new java.awt.Dimension(500, 100));
        south.setLayout(new java.awt.GridLayout(1, 0));

        datapath.setPreferredSize(new java.awt.Dimension(500, 100));
        datapath.setLayout(new java.awt.BorderLayout());

        datapath_scrl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datapath_scrlMouseClicked(evt);
            }
        });

        datapath_values.setLayout(new java.awt.GridLayout(0, 2));

        rf_rf.setText("OP code");
        rf_rf.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rf_rf);

        op_code_l.setText("opcode");
        op_code_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(op_code_l);

        rs.setText("Rs");
        rs.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rs);

        rs_l.setText("jLabel65");
        rs_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rs_l);

        bit16.setText("Rt");
        bit16.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(bit16);

        rt_l.setText("jLabel65");
        rt_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rt_l);

        func.setText("Rd");
        func.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(func);

        rd_l.setText("jLabel65");
        rd_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rd_l);

        read_data1.setText("Shamt");
        read_data1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(read_data1);

        shamt_l.setText("jLabel65");
        shamt_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(shamt_l);

        shamt.setText("Funct");
        shamt.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(shamt);

        funct_l.setText("jLabel65");
        funct_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(funct_l);

        bit32_rd2shamt_mux.setText("PC output");
        bit32_rd2shamt_mux.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(bit32_rd2shamt_mux);

        pc_output_l.setText("jLabel65");
        pc_output_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(pc_output_l);

        zerofalg.setText("PC adder output");
        zerofalg.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(zerofalg);

        pc_adder_output_l.setText("jLabel65");
        pc_adder_output_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(pc_adder_output_l);

        alu_mem_mux.setText("write data rf");
        alu_mem_mux.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(alu_mem_mux);

        write_data_rf_l.setText("jLabel65");
        write_data_rf_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(write_data_rf_l);

        jr_mux.setText("read data1");
        jr_mux.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jr_mux);

        read_data1_l.setText("jLabel65");
        read_data1_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(read_data1_l);

        bit32_sl2.setText("read data2");
        bit32_sl2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(bit32_sl2);

        read_data2_l.setText("jLabel65");
        read_data2_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(read_data2_l);

        branch_mux.setText("alu input1");
        branch_mux.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(branch_mux);

        alu_input1_l.setText("jLabel65");
        alu_input1_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(alu_input1_l);

        pcoutput.setText("alu input2");
        pcoutput.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(pcoutput);

        alu_input2_l.setText("jLabel65");
        alu_input2_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(alu_input2_l);

        jumb_add.setText("alu output");
        jumb_add.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jumb_add);

        alu_output_l.setText("jLabel65");
        alu_output_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(alu_output_l);

        ctr_jump.setText("mem address");
        ctr_jump.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_jump);

        mem_address_l.setText("jLabel65");
        mem_address_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(mem_address_l);

        ctr_memread.setText("mem write data");
        ctr_memread.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_memread);

        mem_write_data_l.setText("jLabel65");
        mem_write_data_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(mem_write_data_l);

        ctr_aluop.setText("zero flag");
        ctr_aluop.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_aluop);

        zero_flag_l.setText("jLabel65");
        zero_flag_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(zero_flag_l);

        ctr_alusrc.setText("and gate output");
        ctr_alusrc.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_alusrc);

        and_gate_l.setText("jLabel65");
        and_gate_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(and_gate_l);

        ctr_pcsrc.setText("branch adder input1");
        ctr_pcsrc.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_pcsrc);

        branch_adder_input1_l.setText("jLabel65");
        branch_adder_input1_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(branch_adder_input1_l);

        ctr_jreg.setText("branch adder input2");
        ctr_jreg.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_jreg);

        branch_adder_input2_l.setText("jLabel65");
        branch_adder_input2_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(branch_adder_input2_l);

        opcode1.setText("branch adder output");
        opcode1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(opcode1);

        branch_adder_output_l.setText("jLabel65");
        branch_adder_output_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(branch_adder_output_l);

        rt1.setText("sign extend input");
        rt1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rt1);

        signextend_input_l.setText("jLabel65");
        signextend_input_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(signextend_input_l);

        regdstmux1.setText("sign extend output");
        regdstmux1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(regdstmux1);

        signextend_output_l.setText("jLabel65");
        signextend_output_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(signextend_output_l);

        bit33.setText("alu control");
        bit33.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(bit33);

        alu_control_l.setText("jLabel65");
        alu_control_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(alu_control_l);

        read_data4.setText("jr mux output");
        read_data4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(read_data4);

        jr_mux_l.setText("jLabel65");
        jr_mux_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jr_mux_l);

        rd2_shamt_mux1.setText("rd mux output");
        rd2_shamt_mux1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rd2_shamt_mux1);

        rd_mux_l.setText("jLabel65");
        rd_mux_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(rd_mux_l);

        aluout1.setText("shamt mux output");
        aluout1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(aluout1);

        shamt_mux_l.setText("jLabel65");
        shamt_mux_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(shamt_mux_l);

        memoutput1.setText("alu src mux output");
        memoutput1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(memoutput1);

        alu_src_mux_l.setText("jLabel65");
        alu_src_mux_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(alu_src_mux_l);

        jal_mux1.setText("alu_mem mux output");
        jal_mux1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jal_mux1);

        alu_mem_mux_l.setText("jLabel65");
        alu_mem_mux_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(alu_mem_mux_l);

        andgate1.setText("jal mux output");
        andgate1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(andgate1);

        jal_mux_l.setText("jLabel65");
        jal_mux_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jal_mux_l);

        branch_adder1.setText("branch mux output");
        branch_adder1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(branch_adder1);

        branch_mux_l.setText("jLabel65");
        branch_mux_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(branch_mux_l);

        jumb_mux1.setText("ctr_regDest");
        jumb_mux1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jumb_mux1);

        ctr_regDest_l.setText("jLabel65");
        ctr_regDest_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_regDest_l);

        pcp5.setText("ctr_regWrite");
        pcp5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(pcp5);

        ctr_regWrite_l.setText("jLabel65");
        ctr_regWrite_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_regWrite_l);

        ctr_regdst1.setText("ctr_aluSrc");
        ctr_regdst1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_regdst1);

        ctr_aluSrc_l.setText("jLabel65");
        ctr_aluSrc_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_aluSrc_l);

        ctr_branch1.setText("ctr_aluOp");
        ctr_branch1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_branch1);

        ctr_aluOp_l.setText("jLabel65");
        ctr_aluOp_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_aluOp_l);

        ctr_memreg1.setText("ctr_branch");
        ctr_memreg1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_memreg1);

        ctr_branch_l.setText("jLabel65");
        ctr_branch_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_branch_l);

        ctr_memwrite1.setText("ctr_memRead");
        ctr_memwrite1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_memwrite1);

        ctr_memRead_l.setText("jLabel65");
        ctr_memRead_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_memRead_l);

        ctr_regwrite1.setText("ctr_memWrite");
        ctr_regwrite1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_regwrite1);

        ctr_memWrite_l.setText("jLabel65");
        ctr_memWrite_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_memWrite_l);

        ctr_shiftlogic1.setText("ctr_memToReg");
        ctr_shiftlogic1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_shiftlogic1);

        ctr_memToReg_l.setText("jLabel65");
        ctr_memToReg_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_memToReg_l);

        jLabel1.setText("ctr_jump");
        jLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jLabel1);

        ctr_jump_l.setText("jLabel2");
        ctr_jump_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_jump_l);

        jLabel3.setText("ctr_jal");
        jLabel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jLabel3);

        ctr_jal_l.setText("jLabel4");
        ctr_jal_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_jal_l);

        jLabel5.setText("ctr_jr");
        jLabel5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jLabel5);

        ctr_jr_l.setText("jLabel7");
        ctr_jr_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_jr_l);

        jLabel6.setText("ctr_shiftLogic");
        jLabel6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(jLabel6);

        ctr_shiftLogic_l.setText("jLabel8");
        ctr_shiftLogic_l.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        datapath_values.add(ctr_shiftLogic_l);

        datapath_scrl.setViewportView(datapath_values);

        datapath.add(datapath_scrl, java.awt.BorderLayout.LINE_END);

        counter_l.setText("Instruction number:0");
        datapath.add(counter_l, java.awt.BorderLayout.LINE_START);

        address_lbl.setText("address");
        address_lbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address_lblActionPerformed(evt);
            }
        });
        jPanel1.add(address_lbl);

        data_lbl.setText("data");
        data_lbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                data_lblActionPerformed(evt);
            }
        });
        jPanel1.add(data_lbl);

        ADD_btn.setText("ADD");
        ADD_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADD_btnActionPerformed(evt);
            }
        });
        jPanel1.add(ADD_btn);

        datapath.add(jPanel1, java.awt.BorderLayout.CENTER);

        south.add(datapath);

        memory.setLayout(new java.awt.BorderLayout());

        mempanal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mempanalMouseClicked(evt);
            }
        });
        mempanal.setLayout(new java.awt.GridLayout(0, 3));
        memoryscrl.setViewportView(mempanal);

        memory.add(memoryscrl, java.awt.BorderLayout.CENTER);

        south.add(memory);

        getContentPane().add(south, java.awt.BorderLayout.SOUTH);

        registers.setBorder(javax.swing.BorderFactory.createTitledBorder("Registers"));
        registers.setPreferredSize(new java.awt.Dimension(200, 822));
        registers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                registersMousePressed(evt);
            }
        });
        registers.setLayout(new java.awt.GridLayout(32, 2));

        $0.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $0.setText("$0");
        $0.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($0);

        $0s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $0s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $0s.setText("0");
        $0s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($0s);

        $at.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $at.setText("$at");
        $at.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($at);

        $ats.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $ats.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $ats.setText("0");
        $ats.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($ats);

        $v0.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $v0.setText("$v0");
        $v0.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($v0);

        $v0s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $v0s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $v0s.setText("0");
        $v0s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($v0s);

        $v1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $v1.setText("$v1");
        $v1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($v1);

        $v1s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $v1s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $v1s.setText("0");
        $v1s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($v1s);

        $a0.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a0.setText("$a0");
        $a0.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($a0);

        $a0s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a0s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $a0s.setText("0");
        $a0s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        registers.add($a0s);

        $a1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a1.setText("$a1");
        $a1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $a1.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($a1);

        $a1s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a1s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $a1s.setText("0");
        $a1s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $a1s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($a1s);

        $a2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a2.setText("$a2");
        $a2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $a2.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($a2);

        $a2s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a2s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $a2s.setText("0");
        $a2s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $a2s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($a2s);

        $a3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a3.setText("$a3");
        $a3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $a3.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($a3);

        $a3s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $a3s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $a3s.setText("0");
        $a3s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $a3s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($a3s);

        $t0.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t0.setText("$t0");
        $t0.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t0.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t0);

        $t0s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t0s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t0s.setText("0");
        $t0s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t0s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t0s);

        $t1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t1.setText("$t1");
        $t1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t1.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t1);

        $t1s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t1s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t1s.setText("0");
        $t1s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t1s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t1s);

        $t2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t2.setText("$t2");
        $t2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t2.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t2);

        $t2s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t2s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t2s.setText("0");
        $t2s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t2s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t2s);

        $t3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t3.setText("$t3");
        $t3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t3.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t3);

        $t3s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t3s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t3s.setText("0");
        $t3s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t3s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t3s);

        $t4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t4.setText("$t4");
        $t4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t4.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t4);

        $t4s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t4s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t4s.setText("0");
        $t4s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t4s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t4s);

        $t5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t5.setText("$t5");
        $t5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t5.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t5);

        $t5s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t5s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t5s.setText("0");
        $t5s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t5s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t5s);

        $t6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t6.setText("$t6");
        $t6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t6.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t6);

        $t6s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t6s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t6s.setText("0");
        $t6s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t6s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t6s);

        $t7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t7.setText("$t7");
        $t7.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t7.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t7);

        $t7s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t7s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t7s.setText("0");
        $t7s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t7s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t7s);

        $s0.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s0.setText("$s0");
        $s0.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s0.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s0);

        $s0s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s0s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s0s.setText("0");
        $s0s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s0s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s0s);

        $s1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s1.setText("$s1");
        $s1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s1.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s1);

        $s1s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s1s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s1s.setText("0");
        $s1s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s1s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s1s);

        $s2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s2.setText("$s2");
        $s2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s2.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s2);

        $s2s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s2s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s2s.setText("0");
        $s2s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s2s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s2s);

        $s3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s3.setText("$s3");
        $s3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s3.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s3);

        $s3s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s3s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s3s.setText("0");
        $s3s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s3s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s3s);

        $s4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s4.setText("$s4");
        $s4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s4.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s4);

        $s4s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s4s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s4s.setText("0");
        $s4s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s4s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s4s);

        $s5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s5.setText("$s5");
        $s5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s5.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s5);

        $s5s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s5s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s5s.setText("0");
        $s5s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s5s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s5s);

        $s6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s6.setText("$s6");
        $s6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s6.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s6);

        $s6s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s6s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s6s.setText("0");
        $s6s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s6s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s6s);

        $s7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s7.setText("$s7");
        $s7.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s7.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s7);

        $s7s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $s7s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $s7s.setText("0");
        $s7s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $s7s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($s7s);

        $t8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t8.setText("$t8");
        $t8.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t8.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t8);

        $t8s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t8s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t8s.setText("0");
        $t8s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t8s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t8s);

        $t9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t9.setText("$t9");
        $t9.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t9.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t9);

        $t9s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $t9s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $t9s.setText("0");
        $t9s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $t9s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($t9s);

        $k0.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $k0.setText("$k0");
        $k0.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $k0.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($k0);

        $k0s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $k0s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $k0s.setText("0");
        $k0s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $k0s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($k0s);

        $k1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $k1.setText("$k1");
        $k1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $k1.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($k1);

        $k1s.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $k1s.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $k1s.setText("0");
        $k1s.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $k1s.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($k1s);

        $gp.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $gp.setText("$gp");
        $gp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $gp.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($gp);

        $gps.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $gps.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $gps.setText("0");
        $gps.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $gps.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($gps);

        $sp.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $sp.setText("$sp");
        $sp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $sp.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($sp);

        $sps.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $sps.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $sps.setText("0");
        $sps.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $sps.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($sps);

        $fp.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $fp.setText("$fp");
        $fp.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $fp.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($fp);

        $fps.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $fps.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $fps.setText("0");
        $fps.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $fps.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($fps);

        $ra.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $ra.setText("$ra");
        $ra.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $ra.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($ra);

        $ras.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        $ras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        $ras.setText("0");
        $ras.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        $ras.setPreferredSize(new java.awt.Dimension(0, 30));
        registers.add($ras);

        getContentPane().add(registers, java.awt.BorderLayout.EAST);

        text_area.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea1FocusLost(evt);
            }
        });
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextArea1MouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        text_area.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(text_area, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Actions");

        compiler.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, 0));
        compiler.setText("Compile");
        compiler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                compilerMouseClicked(evt);
            }
        });
        compiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilerActionPerformed(evt);
            }
        });
        jMenu3.add(compiler);

        nextr.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, 0));
        nextr.setText("next inst.");
        nextr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextrActionPerformed(evt);
            }
        });
        jMenu3.add(nextr);

        runr.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, 0));
        runr.setText("Run");
        runr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runrActionPerformed(evt);
            }
        });
        jMenu3.add(runr);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private  void writeFile(String fileName) throws IOException{
    BufferedWriter fileOut = new BufferedWriter(new FileWriter(fileName));
    this.jTextArea1.write(fileOut);
}
    
    private void jTextArea1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1MouseExited

    private void mempanalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mempanalMouseClicked
        this.jTextArea1.setEnabled(false);
        
    }//GEN-LAST:event_mempanalMouseClicked

    private void datapath_scrlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datapath_scrlMouseClicked
                this.jTextArea1.setEnabled(false);
                
    }//GEN-LAST:event_datapath_scrlMouseClicked

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
        this.jTextArea1.setEnabled(true);
        
    }//GEN-LAST:event_jTextArea1MouseClicked

    private void registersMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registersMousePressed
                this.jTextArea1.setEnabled(false);
                
    }//GEN-LAST:event_registersMousePressed

    private void jTextArea1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1FocusLost

    private void data_lblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_data_lblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_data_lblActionPerformed

    private void ADD_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADD_btnActionPerformed
        // TODO add your handling code here:
        //dm.setSP(parseBtoD(StoB(address_lbl.getText(),32)));
        try{
            dm.setWrite("10");
            dm.setAddress(parseBtoD(StoB(address_lbl.getText())));
            dm.store(StoB(data_lbl.getText()));
            this.ADDMEMORYLABEL(dm.getAddress(), dm.getLocation());
            this.repaint();
        }
        catch(Exception e){
            address_lbl.setText("ERROR");
            data_lbl.setText("NV");
        }
    }//GEN-LAST:event_ADD_btnActionPerformed

    private void address_lblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address_lblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address_lblActionPerformed

    private void runrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runrActionPerformed
        while((k<im.getI())&&k>=0){

            counter++;
            im.CreateMachineString(im.getInstructionLine(Units.PC.getCurrent()));
            im.CreateSubDataPath();

            control.setInput(im.getOpcode(), im.getFunc());

            counter_l.setText("Instructions done:"+counter+"");
            pc_output_l.setText(parseBtoD(pc.getPC().getBits())+"");
            op_code_l.setText(parseBtoD(im.getOpcode().getBits())+"");
            rs_l.setText(parseBtoD(im.getRs().getBits())+"");
            rt_l.setText(parseBtoD(im.getRt().getBits())+"");
            rd_l.setText(parseBtoD(im.getRd().getBits())+"");
            funct_l.setText(parseBtoD(im.getFunc().getBits())+"");
            shamt_l.setText(parseBtoD(im.getShamt().getBits())+"");
            ctr_aluOp_l.setText(control.getALUop());
            ctr_aluSrc_l.setText(control.getALUSrc());
            ctr_branch_l.setText(control.getBranch());
            ctr_jal_l.setText(control.getJumpReg());
            ctr_jr_l.setText(control.getPCSrc());
            ctr_jump_l.setText(control.getJump());
            ctr_memRead_l.setText(control.getMemRead());
            ctr_memToReg_l.setText(control.getMemToReg());
            ctr_memWrite_l.setText(control.getMemWrite());
            ctr_regDest_l.setText(control.getRegDst());
            ctr_regWrite_l.setText(control.getRegWrite());
            ctr_shiftLogic_l.setText(control.getShift());

            mux3.setControl(control.getRegDst());
            mux3.setInput1(im.getRt());
            mux3.setInput2(im.getRd());
            rd_mux_l.setText(parseBtoD(mux3.getOutput().getBits())+"");

            rf.setControl(control.getRegWrite());
            rf.SetRegisterFile(im.getRs(), im.getRt(), mux3.getOutput());
            se.setInput(im.getThe16bit_address());
            signextend_input_l.setText(parseBtoD(im.getThe16bit_address().getBits())+"");

            mux8.setControl(control.getShift());
            mux8.setInput2(im.getShamt());
            mux8.setInput1(rf.getRead2());
            shamt_mux_l.setText(parseBtoD(mux8.getOutput().getBits())+"");
            read_data1_l.setText(parseBtoD(rf.getRead1().getBits())+"");
            read_data2_l.setText(parseBtoD(rf.getRead2().getBits())+"");

            mux4.setControl(control.getALUSrc());
            mux4.setInput1(mux8.getOutput());
            mux4.setInput2(se.getOutput());
            alu_src_mux_l.setText(parseBtoD(mux4.getOutput().getBits())+"");

            //alucont.Do(control.getALUop(),BtoS(im.getFunc().getBits()));
            alucont.AluControl_ctrl(im.getFunc(), control.getALUop());

            alu.setInp1(rf.getRead1());
            alu.setInp2(mux4.getOutput());
            alu.setSig(alucont.getSignal(),Parse.BtoS(im.getOpcode().getBits()));
            alu_input1_l.setText(parseBtoD(rf.getRead1().getBits())+"");
            alu_input2_l.setText(parseBtoD(mux4.getOutput().getBits())+"");
            alu_control_l.setText(alucont.getSignal());

            dm.setSP(Parse.parseBtoD((rf.getReg(28).getBits())));
            int x=Parse.parseBtoD(alu.getOutput().getBits());
            alu_output_l.setText(parseBtoD(alu.getOutput().getBits())+"");
            mem_address_l.setText(parseBtoD(alu.getOutput().getBits())+"");
            mem_write_data_l.setText(parseBtoD(rf.getRead2().getBits())+"");
            zero_flag_l.setText(alu.getZeroFlag()+"");
            dm.setAddress(x);
            dm.setRead(control.getMemRead());
            dm.setWrite(control.getMemWrite());
            dm.store(rf.getRead2().getBits());
            if(!"00".equals(control.getMemWrite()) && !"0".equals(control.getMemWrite())){
                this.ADDMEMORYLABEL(dm.getAddress(), dm.getLocation());
            }

            mux5.setControl(control.getMemToReg());
            mux5.setInput1(alu.getOutput());
            mux5.setInput2(dm.load());
            alu_mem_mux_l.setText(parseBtoD(mux5.getOutput().getBits())+"");

            //rf.setReg(mux5.getOutput().getBits());

            adder1.setInput1(pc.getPC());
            adder1.setInput2(d);
            adder1.add();
            pc_adder_output_l.setText(parseBtoD(adder1.getOutput().getBits())+"");
            DataPath w=new DataPath(32);
            //  w.setBits(parseDtoB((Parse.parseBtoD_unsigned(se.getOutput().getBits())-1),32));//2l -1 34an 2l 16 bit bytb3to fl branch zyada wa7ed
            adder2.setInput1(adder1.getOutput());
            sl2.setInput(se.getOutput());
            adder2.setInput2(sl2.getOutput());
            adder2.add();
            branch_adder_input1_l.setText(parseBtoD(adder1.getOutput().getBits())+"");
            branch_adder_input2_l.setText(parseBtoD(sl2.getOutput().getBits())+"");
            branch_adder_output_l.setText(parseBtoD(adder2.getOutput().getBits())+"");

            //ALU.ZeroFlag();
            String s;
            if(("1".equals(control.getBranch()))&&("1".equals(alu.getZeroFlag()+"")))
            s="1";
            else
            s="0";
            and_gate_l.setText(s);
            mux1.setControl(s);
            mux1.setInput1(adder1.getOutput());
            mux1.setInput2(adder2.getOutput());
            branch_mux_l.setText(parseBtoD(mux1.getOutput().getBits())+"");

            for(int i=4;i<30;i++)
            d2.setbyte(i, im.getThe26bit_address().getbyte(i-4));
            d2.setbyte(30, 0);
            d2.setbyte(31, 0);
            for(int i=0;i<4;i++)
            d2.setbyte(i, adder1.getOutput().getbyte(i));

            mux2.setControl(control.getJump());
            mux2.setInput1(mux1.getOutput());
            mux2.setInput2(d2);

            //pc.setPC(mux2.getOutput().getBits());
            //mux6.setControl(control.getJumpReg());//wronge control signal

            //sl3.setInput(rf.getReg(31));
            mux6.setControl(control.getPCSrc());//true control signal
            mux6.setInput1(mux2.getOutput());
            //mux6.setInput2(rf.getReg(31));
            mux6.setInput2(rf.getReg(31));//34an 2l shift left bta3t 2l $ra fl jr
            jr_mux_l.setText(parseBtoD(mux6.getOutput().getBits())+"");

            //mux7.setControl(control.getPCSrc());//wronge control signal

            mux7.setControl(control.getJumpReg());//true control signal
            mux7.setInput1(mux5.getOutput());
            mux7.setInput2(adder1.getOutput());
            jal_mux_l.setText(parseBtoD(mux7.getOutput().getBits())+"");
            write_data_rf_l.setText(parseBtoD(mux7.getOutput().getBits())+"");

            //for lui instruction
            //lesa 3yzen n3mel instruction lui fl instructions wl instruction memory ,2na 3mltha fl control unit
            //mux9.setInput1(mux7.getOutput());
            //mux9.setInput2(se.getOutput());
            //mux9.setControl(control.getLui());
            //rf.setReg(mux9.getOutput().getBits());
            signextend_output_l.setText(parseBtoD(se.getOutput().getBits())+"");
            rf.setReg(mux7.getOutput().getBits());
            pc.setPC(mux6.getOutput().getBits());
            dm.setSP(Parse.parseBtoD(rf.getReg(29).getBits()));
            rf.resetzero();
            this.GET_REGISTERVALUE();

            k=(parseBtoD(pc.getPC().getBits())-nomono)/4;//for testing the pc
            System.out.println(k);//for testing the pc
        }
    }//GEN-LAST:event_runrActionPerformed

    private void nextrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextrActionPerformed
        if((k<im.getI())&&k>=0){
            counter++;
            im.CreateMachineString(im.getInstructionLine(Units.PC.getCurrent()));
            im.CreateSubDataPath();

            control.setInput(im.getOpcode(), im.getFunc());

            counter_l.setText("Instructions done:"+counter+"");
            pc_output_l.setText(parseBtoD(pc.getPC().getBits())+"");
            op_code_l.setText(parseBtoD(im.getOpcode().getBits())+"");
            rs_l.setText(parseBtoD(im.getRs().getBits())+"");
            rt_l.setText(parseBtoD(im.getRt().getBits())+"");
            rd_l.setText(parseBtoD(im.getRd().getBits())+"");
            funct_l.setText(parseBtoD(im.getFunc().getBits())+"");
            shamt_l.setText(parseBtoD(im.getShamt().getBits())+"");
            ctr_aluOp_l.setText(control.getALUop());
            ctr_aluSrc_l.setText(control.getALUSrc());
            ctr_branch_l.setText(control.getBranch());
            ctr_jal_l.setText(control.getJumpReg());
            ctr_jr_l.setText(control.getPCSrc());
            ctr_jump_l.setText(control.getJump());
            ctr_memRead_l.setText(control.getMemRead());
            ctr_memToReg_l.setText(control.getMemToReg());
            ctr_memWrite_l.setText(control.getMemWrite());
            ctr_regDest_l.setText(control.getRegDst());
            ctr_regWrite_l.setText(control.getRegWrite());
            ctr_shiftLogic_l.setText(control.getShift());

            mux3.setControl(control.getRegDst());
            mux3.setInput1(im.getRt());
            mux3.setInput2(im.getRd());
            rd_mux_l.setText(parseBtoD(mux3.getOutput().getBits())+"");

            rf.setControl(control.getRegWrite());
            rf.SetRegisterFile(im.getRs(), im.getRt(), mux3.getOutput());
            se.setInput(im.getThe16bit_address());
            signextend_input_l.setText(parseBtoD(im.getThe16bit_address().getBits())+"");

            mux8.setControl(control.getShift());
            mux8.setInput2(im.getShamt());
            mux8.setInput1(rf.getRead2());
            shamt_mux_l.setText(parseBtoD(mux8.getOutput().getBits())+"");
            read_data1_l.setText(parseBtoD(rf.getRead1().getBits())+"");
            read_data2_l.setText(parseBtoD(rf.getRead2().getBits())+"");

            mux4.setControl(control.getALUSrc());
            mux4.setInput1(mux8.getOutput());
            mux4.setInput2(se.getOutput());
            alu_src_mux_l.setText(parseBtoD(mux4.getOutput().getBits())+"");

            //alucont.Do(control.getALUop(),BtoS(im.getFunc().getBits()));
            alucont.AluControl_ctrl(im.getFunc(), control.getALUop());

            alu.setInp1(rf.getRead1());
            alu.setInp2(mux4.getOutput());
            alu.setSig(alucont.getSignal(),Parse.BtoS(im.getOpcode().getBits()));
            alu_input1_l.setText(parseBtoD(rf.getRead1().getBits())+"");
            alu_input2_l.setText(parseBtoD(mux4.getOutput().getBits())+"");
            alu_control_l.setText(alucont.getSignal());

            dm.setSP(Parse.parseBtoD((rf.getReg(28).getBits())));
            int x=Parse.parseBtoD(alu.getOutput().getBits());
            alu_output_l.setText(parseBtoD(alu.getOutput().getBits())+"");
            mem_address_l.setText(parseBtoD(alu.getOutput().getBits())+"");
            mem_write_data_l.setText(parseBtoD(rf.getRead2().getBits())+"");
            zero_flag_l.setText(alu.getZeroFlag()+"");
            dm.setAddress(x);
            dm.setRead(control.getMemRead());
            dm.setWrite(control.getMemWrite());
            dm.store(rf.getRead2().getBits());
            if(!"00".equals(control.getMemWrite()) && !"0".equals(control.getMemWrite())){
                this.ADDMEMORYLABEL(dm.getAddress(), dm.getLocation());
            }

            mux5.setControl(control.getMemToReg());
            mux5.setInput1(alu.getOutput());
            mux5.setInput2(dm.load());
            alu_mem_mux_l.setText(parseBtoD(mux5.getOutput().getBits())+"");

            //rf.setReg(mux5.getOutput().getBits());

            adder1.setInput1(pc.getPC());
            adder1.setInput2(d);
            adder1.add();
            pc_adder_output_l.setText(parseBtoD(adder1.getOutput().getBits())+"");
            DataPath w=new DataPath(32);
            //  w.setBits(parseDtoB((Parse.parseBtoD_unsigned(se.getOutput().getBits())-1),32));//2l -1 34an 2l 16 bit bytb3to fl branch zyada wa7ed
            adder2.setInput1(adder1.getOutput());
            sl2.setInput(se.getOutput());
            adder2.setInput2(sl2.getOutput());
            adder2.add();
            branch_adder_input1_l.setText(parseBtoD(adder1.getOutput().getBits())+"");
            branch_adder_input2_l.setText(parseBtoD(sl2.getOutput().getBits())+"");
            branch_adder_output_l.setText(parseBtoD(adder2.getOutput().getBits())+"");

            //ALU.ZeroFlag();
            String s;
            if(("1".equals(control.getBranch()))&&("1".equals(alu.getZeroFlag()+"")))
            s="1";
            else
            s="0";
            and_gate_l.setText(s);
            mux1.setControl(s);
            mux1.setInput1(adder1.getOutput());
            mux1.setInput2(adder2.getOutput());
            branch_mux_l.setText(parseBtoD(mux1.getOutput().getBits())+"");

            for(int i=4;i<30;i++)
            d2.setbyte(i, im.getThe26bit_address().getbyte(i-4));
            d2.setbyte(30, 0);
            d2.setbyte(31, 0);
            for(int i=0;i<4;i++)
            d2.setbyte(i, adder1.getOutput().getbyte(i));

            mux2.setControl(control.getJump());
            mux2.setInput1(mux1.getOutput());
            mux2.setInput2(d2);

            //pc.setPC(mux2.getOutput().getBits());
            //mux6.setControl(control.getJumpReg());//wronge control signal

            //sl3.setInput(rf.getReg(31));
            mux6.setControl(control.getPCSrc());//true control signal
            mux6.setInput1(mux2.getOutput());
            //mux6.setInput2(rf.getReg(31));
            mux6.setInput2(rf.getReg(31));//34an 2l shift left bta3t 2l $ra fl jr
            jr_mux_l.setText(parseBtoD(mux6.getOutput().getBits())+"");

            //mux7.setControl(control.getPCSrc());//wronge control signal

            mux7.setControl(control.getJumpReg());//true control signal
            mux7.setInput1(mux5.getOutput());
            mux7.setInput2(adder1.getOutput());
            jal_mux_l.setText(parseBtoD(mux7.getOutput().getBits())+"");
            write_data_rf_l.setText(parseBtoD(mux7.getOutput().getBits())+"");

            //for lui instruction
            //lesa 3yzen n3mel instruction lui fl instructions wl instruction memory ,2na 3mltha fl control unit
            //mux9.setInput1(mux7.getOutput());
            //mux9.setInput2(se.getOutput());
            //mux9.setControl(control.getLui());
            //rf.setReg(mux9.getOutput().getBits());
            signextend_output_l.setText(parseBtoD(se.getOutput().getBits())+"");
            rf.setReg(mux7.getOutput().getBits());
            pc.setPC(mux6.getOutput().getBits());
            dm.setSP(Parse.parseBtoD(rf.getReg(29).getBits()));
            rf.resetzero();
            this.GET_REGISTERVALUE();

            k=(Parse.parseBtoD(pc.getPC().getBits())-nomono)/4;//for testing the pc
            System.out.println(k);//for testing the pc
        }
    }//GEN-LAST:event_nextrActionPerformed

    private void compilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilerActionPerformed
        Scanner sc=new Scanner(System.in);

        // nomono=sc.nextInt();
        nomono=4;
        Units.Instruction.setOffset(nomono);
        //System.out.println("enter the starting address");
        //offset=sc.nextInt();

        pc=new PC(nomono);
        adder1=new ADDER();
        adder2=new ADDER();
        alu=new ALU();
        sl1=new SL2();
        sl2=new SL2();
        sl3=new SL2();
        se=new SignExtend();
        control=new Contoller();
        aluControl =new AluControl();
        mux1=new MUX(32);
        mux2=new MUX(32);
        mux3=new MUX(5);
        mux4=new MUX(32);
        mux5=new MUX(32);
        mux6=new MUX(32);
        mux7=new MUX(32);
        mux8=new MUX(32);
        mux9=new MUX(32);
        alucont=new AluControl();
        im=new InstructionMemory();
        //dm=new DataMemory();/////////////////////////////
        rf=new RegisterFile();
        counter=0;

        try {
            this.writeFile("New Text Document.txt");
        } catch (IOException ex) {
            Logger.getLogger(APP.class.getName()).log(Level.SEVERE, null, ex);
        }
        //the datapath
        //File file =new File("input.txt");
        n=Parse.parseBtoD(pc.getPC().getBits());
        im.setinstruction("New Text Document.txt",n  );
        d2=new DataPath(32);
        d=new DataPath(32);
        d.setBits(parseDtoB(4,32));

        //load 2l data memory
        //System.out.println("load the Data Memory");
        //dm.loadData();

        k=(Parse.parseBtoD(pc.getPC().getBits())-nomono)/4;//for testing
        System.out.println(k);//for testing
    }//GEN-LAST:event_compilerActionPerformed

    private void compilerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compilerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_compilerMouseClicked

    public  void ADDMEMORYLABEL(int address,int locations){
        boolean x=false;
        for(int i=0;i<Labels.size();i++){
            if(Labels.get(i).address==address){
                Labels.get(i).j.setText("memory:"+address+"="+locations);
                //Labels.get(i).j.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEtchedBorder(), BorderFactory.createLineBorder(Color.BLACK)));
                x=true;
            }
        }
        if(x==false){
           mem jx=new mem(new JLabel(address+":"+locations), address);
           jx.j.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEtchedBorder(), BorderFactory.createLineBorder(Color.BLACK)));
            Labels.add(jx);
            mempanal.add(jx.getJ());   
        }
        repaint();
    }
    
    private void GET_REGISTERVALUE(){
      //  $0s.setText((Parse.parseBtoD((rf.getReg(0)).getBits()))+"");
         $ats.setText((Parse.parseBtoD((rf.getReg(1)).getBits()))+"");
          $v0s.setText((Parse.parseBtoD((rf.getReg(2)).getBits()))+"");
           $v1s.setText((Parse.parseBtoD((rf.getReg(3)).getBits()))+"");
           $a0s.setText((Parse.parseBtoD((rf.getReg(4)).getBits()))+"");
           $a1s.setText((Parse.parseBtoD((rf.getReg(5)).getBits()))+"");
           $a2s.setText((Parse.parseBtoD((rf.getReg(6)).getBits()))+"");
           $a3s.setText((Parse.parseBtoD((rf.getReg(7)).getBits()))+"");
           $t0s.setText((Parse.parseBtoD((rf.getReg(8)).getBits()))+"");
           $t1s.setText((Parse.parseBtoD((rf.getReg(9)).getBits()))+"");
           $t2s.setText((Parse.parseBtoD((rf.getReg(10)).getBits()))+"");
           $t3s.setText((Parse.parseBtoD((rf.getReg(11)).getBits()))+"");
           $t4s.setText((Parse.parseBtoD((rf.getReg(12)).getBits()))+"");
           $t5s.setText((Parse.parseBtoD((rf.getReg(13)).getBits()))+"");
           $t6s.setText((Parse.parseBtoD((rf.getReg(14)).getBits()))+"");
           $t7s.setText((Parse.parseBtoD((rf.getReg(15)).getBits()))+"");
           $s0s.setText((Parse.parseBtoD((rf.getReg(16)).getBits()))+"");
           $s1s.setText((Parse.parseBtoD((rf.getReg(17)).getBits()))+"");
           $s2s.setText((Parse.parseBtoD((rf.getReg(18)).getBits()))+"");
           $s3s.setText((Parse.parseBtoD((rf.getReg(19)).getBits()))+"");
           $s4s.setText((Parse.parseBtoD((rf.getReg(20)).getBits()))+"");
           $s5s.setText((Parse.parseBtoD((rf.getReg(21)).getBits()))+"");
           $s6s.setText((Parse.parseBtoD((rf.getReg(22)).getBits()))+"");
           $s7s.setText((Parse.parseBtoD((rf.getReg(23)).getBits()))+"");
           $t8s.setText((Parse.parseBtoD((rf.getReg(24)).getBits()))+"");
           $t9s.setText((Parse.parseBtoD((rf.getReg(25)).getBits()))+"");
           $k0s.setText((Parse.parseBtoD((rf.getReg(26)).getBits()))+"");
           $k1s.setText((Parse.parseBtoD((rf.getReg(27)).getBits()))+"");
           $gps.setText((Parse.parseBtoD((rf.getReg(28)).getBits()))+"");
           $sps.setText((Parse.parseBtoD((rf.getReg(29)).getBits()))+"");
           $fps.setText((Parse.parseBtoD((rf.getReg(30)).getBits()))+"");
           $ras.setText((Parse.parseBtoD((rf.getReg(31)).getBits()))+"");
           repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new APP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel $0;
    private javax.swing.JLabel $0s;
    private javax.swing.JLabel $a0;
    private javax.swing.JLabel $a0s;
    private javax.swing.JLabel $a1;
    private javax.swing.JLabel $a1s;
    private javax.swing.JLabel $a2;
    private javax.swing.JLabel $a2s;
    private javax.swing.JLabel $a3;
    private javax.swing.JLabel $a3s;
    private javax.swing.JLabel $at;
    private javax.swing.JLabel $ats;
    private javax.swing.JLabel $fp;
    private javax.swing.JLabel $fps;
    private javax.swing.JLabel $gp;
    private javax.swing.JLabel $gps;
    private javax.swing.JLabel $k0;
    private javax.swing.JLabel $k0s;
    private javax.swing.JLabel $k1;
    private javax.swing.JLabel $k1s;
    private javax.swing.JLabel $ra;
    private javax.swing.JLabel $ras;
    private javax.swing.JLabel $s0;
    private javax.swing.JLabel $s0s;
    private javax.swing.JLabel $s1;
    private javax.swing.JLabel $s1s;
    private javax.swing.JLabel $s2;
    private javax.swing.JLabel $s2s;
    private javax.swing.JLabel $s3;
    private javax.swing.JLabel $s3s;
    private javax.swing.JLabel $s4;
    private javax.swing.JLabel $s4s;
    private javax.swing.JLabel $s5;
    private javax.swing.JLabel $s5s;
    private javax.swing.JLabel $s6;
    private javax.swing.JLabel $s6s;
    private javax.swing.JLabel $s7;
    private javax.swing.JLabel $s7s;
    private javax.swing.JLabel $sp;
    private javax.swing.JLabel $sps;
    private javax.swing.JLabel $t0;
    private javax.swing.JLabel $t0s;
    private javax.swing.JLabel $t1;
    private javax.swing.JLabel $t1s;
    private javax.swing.JLabel $t2;
    private javax.swing.JLabel $t2s;
    private javax.swing.JLabel $t3;
    private javax.swing.JLabel $t3s;
    private javax.swing.JLabel $t4;
    private javax.swing.JLabel $t4s;
    private javax.swing.JLabel $t5;
    private javax.swing.JLabel $t5s;
    private javax.swing.JLabel $t6;
    private javax.swing.JLabel $t6s;
    private javax.swing.JLabel $t7;
    private javax.swing.JLabel $t7s;
    private javax.swing.JLabel $t8;
    private javax.swing.JLabel $t8s;
    private javax.swing.JLabel $t9;
    private javax.swing.JLabel $t9s;
    private javax.swing.JLabel $v0;
    private javax.swing.JLabel $v0s;
    private javax.swing.JLabel $v1;
    private javax.swing.JLabel $v1s;
    private javax.swing.JButton ADD_btn;
    private javax.swing.JTextField address_lbl;
    private javax.swing.JLabel alu_control_l;
    private javax.swing.JLabel alu_input1_l;
    private javax.swing.JLabel alu_input2_l;
    private javax.swing.JLabel alu_mem_mux;
    private javax.swing.JLabel alu_mem_mux_l;
    private javax.swing.JLabel alu_output_l;
    private javax.swing.JLabel alu_src_mux_l;
    private javax.swing.JLabel aluout1;
    private javax.swing.JLabel and_gate_l;
    private javax.swing.JLabel andgate1;
    private javax.swing.JLabel bit16;
    private javax.swing.JLabel bit32_rd2shamt_mux;
    private javax.swing.JLabel bit32_sl2;
    private javax.swing.JLabel bit33;
    private javax.swing.JLabel branch_adder1;
    private javax.swing.JLabel branch_adder_input1_l;
    private javax.swing.JLabel branch_adder_input2_l;
    private javax.swing.JLabel branch_adder_output_l;
    private javax.swing.JLabel branch_mux;
    private javax.swing.JLabel branch_mux_l;
    private javax.swing.JMenuItem compiler;
    private javax.swing.JLabel counter_l;
    private javax.swing.JLabel ctr_aluOp_l;
    private javax.swing.JLabel ctr_aluSrc_l;
    private javax.swing.JLabel ctr_aluop;
    private javax.swing.JLabel ctr_alusrc;
    private javax.swing.JLabel ctr_branch1;
    private javax.swing.JLabel ctr_branch_l;
    private javax.swing.JLabel ctr_jal_l;
    private javax.swing.JLabel ctr_jr_l;
    private javax.swing.JLabel ctr_jreg;
    private javax.swing.JLabel ctr_jump;
    private javax.swing.JLabel ctr_jump_l;
    private javax.swing.JLabel ctr_memRead_l;
    private javax.swing.JLabel ctr_memToReg_l;
    private javax.swing.JLabel ctr_memWrite_l;
    private javax.swing.JLabel ctr_memread;
    private javax.swing.JLabel ctr_memreg1;
    private javax.swing.JLabel ctr_memwrite1;
    private javax.swing.JLabel ctr_pcsrc;
    private javax.swing.JLabel ctr_regDest_l;
    private javax.swing.JLabel ctr_regWrite_l;
    private javax.swing.JLabel ctr_regdst1;
    private javax.swing.JLabel ctr_regwrite1;
    private javax.swing.JLabel ctr_shiftLogic_l;
    private javax.swing.JLabel ctr_shiftlogic1;
    private javax.swing.JTextField data_lbl;
    private javax.swing.JPanel datapath;
    private javax.swing.JScrollPane datapath_scrl;
    private javax.swing.JPanel datapath_values;
    private javax.swing.JLabel func;
    private javax.swing.JLabel funct_l;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jal_mux1;
    private javax.swing.JLabel jal_mux_l;
    private javax.swing.JLabel jr_mux;
    private javax.swing.JLabel jr_mux_l;
    private javax.swing.JLabel jumb_add;
    private javax.swing.JLabel jumb_mux1;
    private javax.swing.JLabel mem_address_l;
    private javax.swing.JLabel mem_write_data_l;
    private javax.swing.JPanel memory;
    private javax.swing.JScrollPane memoryscrl;
    private javax.swing.JLabel memoutput1;
    private javax.swing.JPanel mempanal;
    private javax.swing.JMenuItem nextr;
    private javax.swing.JLabel op_code_l;
    private javax.swing.JLabel opcode1;
    private javax.swing.JLabel pc_adder_output_l;
    private javax.swing.JLabel pc_output_l;
    private javax.swing.JLabel pcoutput;
    private javax.swing.JLabel pcp5;
    private javax.swing.JLabel rd2_shamt_mux1;
    private javax.swing.JLabel rd_l;
    private javax.swing.JLabel rd_mux_l;
    private javax.swing.JLabel read_data1;
    private javax.swing.JLabel read_data1_l;
    private javax.swing.JLabel read_data2_l;
    private javax.swing.JLabel read_data4;
    private javax.swing.JLabel regdstmux1;
    private javax.swing.JPanel registers;
    private javax.swing.JLabel rf_rf;
    private javax.swing.JLabel rs;
    private javax.swing.JLabel rs_l;
    private javax.swing.JLabel rt1;
    private javax.swing.JLabel rt_l;
    private javax.swing.JMenuItem runr;
    private javax.swing.JLabel shamt;
    private javax.swing.JLabel shamt_l;
    private javax.swing.JLabel shamt_mux_l;
    private javax.swing.JLabel signextend_input_l;
    private javax.swing.JLabel signextend_output_l;
    private javax.swing.JPanel south;
    private javax.swing.JPanel text_area;
    private javax.swing.JLabel write_data_rf_l;
    private javax.swing.JLabel zero_flag_l;
    private javax.swing.JLabel zerofalg;
    // End of variables declaration//GEN-END:variables
}
